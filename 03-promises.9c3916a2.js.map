{"mappings":"AAcA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACT,MAAMC,EAAU,C,SAAET,E,MAAUC,GACxBI,EACFF,EAAQM,GAERL,EAAOK,EAAQ,GAEhBR,EAAM,G,CAxBbS,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,yBAuB7C,SAAwBO,EAAOC,EAAMC,GACnC,IAAIC,EAAeH,EACnB,IAAK,IAAII,EAAI,EAAGA,GAAKF,EAAQE,IAC3BvB,EAAcuB,EAAGD,GACdE,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,MAAU,IAE7DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAeC,MAAU,IAE7DoB,GAAgBF,C,CA3BlBQ,CAJcC,SAASb,EAAWc,OACrBD,SAASZ,EAAUa,OACjBD,SAASX,EAAYY,O","sources":["src/js/03-promises.js"],"sourcesContent":["document.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  createPromises(delay, step, amount);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      const promise = { position, delay };\n      if (shouldResolve) {\n        resolve(promise);\n      } else {\n        reject(promise);\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(delay, step, amount) {\n  let currentDelay = delay;\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += step;\n  }\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","promise","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","step","amount","currentDelay","i","then","console","log","catch","$47d4ff9957288465$var$createPromises","parseInt","value"],"version":3,"file":"03-promises.9c3916a2.js.map"}